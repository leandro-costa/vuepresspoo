(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{397:function(a,s,e){"use strict";e.r(s);var t=e(29),n=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"classes-abstratas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#classes-abstratas"}},[a._v("#")]),a._v(" Classes Abstratas")]),a._v(" "),e("ul",[e("li",[a._v("Classes abstratas são classes que não produzem instâncias. Elas agrupam características e comportamentos que serão herdados por outras classes")]),a._v(" "),e("li",[a._v("Fornecem padrões de comportamento que serão implementados nas suas subclasses")]),a._v(" "),e("li",[a._v("Podem ter métodos com implementação definida")]),a._v(" "),e("li",[a._v("Não pode ser instanciada diretamente ("),e("code",[a._v("new")]),a._v(").")]),a._v(" "),e("li",[a._v("Uma classe abstrata possui características que devem ser implementadas por classes filhas")]),a._v(" "),e("li",[a._v("Os métodos abstratos são obrigatoriamente implementados pelas classes filhas concretas, quando a mesma herda de uma classe abstrata.")])]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("abstract")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Pessoa")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" matricula"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" nome"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("abstract")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("estacionar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("entrar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Entrando na Faculdade"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Aluno")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Pessoa")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" media"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("estacionar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Estacionando na área para estudante..."')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Professor")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Pessoa")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" salario"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("estacionar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Estacionando nas vagas de professor"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("figure",[e("img",{attrs:{src:"https://www.plantuml.com/plantuml/svg/XP1D2i9038NtEKMMYdY2RkeD14-GpaGPc4bWVaGelRifRKKHCRkyl7mlf2-LScqf0Y0DfMPo5LsaKl3CfIZXY81Mno0L4zKSN8lKhUB5UhcXQE9LEemRPiAx1ezi2IweKDxjDyyo4BFD8amMlcIUOXD5VbGM_tM1rpP4niG-q2VfFG8cVE7EMQyp8_z15egKWtQ_cG2zxTkVdW00",alt:"uml diagram"}}),a._v(" "),e("figcaption",[a._v("UML Classe abstrata Pessoa e classes concretas Aluno e Professor.")])]),a._v(" "),e("h2",{attrs:{id:"outros-exemplos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#outros-exemplos"}},[a._v("#")]),a._v(" Outros Exemplos")]),a._v(" "),e("h3",{attrs:{id:"caelum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#caelum"}},[a._v("#")]),a._v(" Caelum")]),a._v(" "),e("p",[e("sup",{staticClass:"footnote-ref"},[e("a",{attrs:{href:"#fn1",id:"fnref1"}},[a._v("[1]")])])]),a._v(" "),e("p",[a._v("Vamos recordar em como pode estar nossa classe "),e("code",[a._v("Funcionario")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" nome"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" cpf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" salario"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBonificacao")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("salario "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// outros métodos aqui")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])]),e("p",[a._v("Considere o nosso "),e("code",[a._v("ControleDeBonificacao")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ControleDeBonificacoes")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" totalDeBonificacoes "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("registra")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),a._v(" f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Adicionando bonificação do funcionario: "')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("totalDeBonificacoes "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBonificacao")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getTotalDeBonificacoes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("totalDeBonificacoes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br")])]),e("p",[a._v("Nosso método "),e("code",[a._v("registra")]),a._v(" recebe qualquer referência do tipo "),e("code",[a._v("Funcionario")]),a._v(", isto é, podem ser objetos do tipo "),e("code",[a._v("Funcionario")]),a._v(" e qualquer de seus subtipos: "),e("code",[a._v("Gerente")]),a._v(", "),e("code",[a._v("Diretor")]),a._v(" e, eventualmente, alguma nova subclasse que venha ser escrita, sem prévio conhecimento do autor da "),e("code",[a._v("ControleDeBonificacao")]),a._v(".")]),a._v(" "),e("p",[a._v("Estamos utilizando aqui a classe "),e("code",[a._v("Funcionario")]),a._v(" para o polimorfismo. Se não fosse ela, teríamos um grande prejuízo: precisaríamos criar um método "),e("code",[a._v("registra")]),a._v(" para receber cada um dos tipos de "),e("code",[a._v("Funcionario")]),a._v(", um para "),e("code",[a._v("Gerente")]),a._v(", um para "),e("code",[a._v("Diretor")]),a._v(", etc. Repare que perder esse poder é muito pior do que a pequena vantagem que a herança traz em herdar código.")]),a._v(" "),e("p",[a._v("Porém, em alguns sistemas, como é o nosso caso, usamos uma classe com apenas esses intuitos: de economizar um pouco código e ganhar polimorsmo para criar métodos mais genéricos, que se encaixem a diversos objetos.")]),a._v(" "),e("p",[a._v("Faz sentido ter uma referência do tipo "),e("code",[a._v("Funcionario")]),a._v("? Essa pergunta é diferente de saber se faz sentido ter um objeto do tipo "),e("code",[a._v("Funcionario:")]),a._v(" nesse caso, faz sim e é muito útil.")]),a._v(" "),e("p",[a._v("Referenciando "),e("code",[a._v("Funcionario")]),a._v(" temos o polimorfismo de referência, já que podemos receber qualquer objeto que seja um "),e("code",[a._v("Funcionario")]),a._v(". Porém, dar "),e("code",[a._v("new")]),a._v(" em "),e("code",[a._v("Funcionario")]),a._v(" pode não fazer sentido, isto é, não queremos receber um objeto do tipo "),e("code",[a._v("Funcionario")]),a._v(", mas sim que aquela referência seja ou um "),e("code",[a._v("Gerente")]),a._v(", ou um "),e("code",[a._v("Diretor")]),a._v(", etc. Algo mais "),e("strong",[a._v("concreto")]),a._v(" que um "),e("code",[a._v("Funcionario")]),a._v(".")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ControleDeBonificacoes")]),a._v(" cdb "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ControleDeBonificacoes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),a._v(" f "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ncdb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("adiciona")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// faz sentido?")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("Vejamos um outro caso em que não faz sentido ter um objeto daquele tipo, apesar da classe existir: imagine a classe "),e("code",[a._v("Pessoa")]),a._v(" e duas filhas, "),e("code",[a._v("PessoaFisica")]),a._v(" e "),e("code",[a._v("PessoaJuridica")]),a._v(". Quando puxamos um relatório de nossos clientes (uma "),e("code",[a._v("array")]),a._v(" de "),e("code",[a._v("Pessoa")]),a._v(" por exemplo), queremos que cada um deles seja ou uma "),e("code",[a._v("PessoaFisica")]),a._v(", ou uma "),e("code",[a._v("PessoaJuridica")]),a._v(". A classe "),e("code",[a._v("Pessoa")]),a._v(", nesse caso, estaria sendo usada apenas para ganhar o polimorfismo e herdar algumas coisas: não faz sentido permitir instanciá-la.")]),a._v(" "),e("p",[a._v("Para resolver esses problemas, temos as "),e("em",[a._v("classes abstratas")]),a._v(".")]),a._v(" "),e("h4",{attrs:{id:"classe-abstrata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#classe-abstrata"}},[a._v("#")]),a._v(" Classe abstrata")]),a._v(" "),e("p",[a._v("O que, exatamente, vem a ser a nossa classe "),e("code",[a._v("Funcionario")]),a._v("? Nossa empresa tem apenas Diretores, Gerentes, Secretárias, etc. Ela é uma classe que apenas idealiza um tipo, define apenas um rascunho.")]),a._v(" "),e("p",[a._v("Para o nosso sistema, é inadmissível que um objeto seja apenas do tipo "),e("code",[a._v("Funcionario")]),a._v(" (pode existir um sistema em que faça sentido ter objetos do tipo Funcionario ou apenas "),e("code",[a._v("Pessoa")]),a._v(", mas, no nosso caso, não).")]),a._v(" "),e("p",[a._v("Usamos a palavra chave "),e("em",[a._v("abstract")]),a._v(" para impedir que ela possa ser instanciada. Esse é o efeito direto de se usar o modificador "),e("code",[a._v("abstract")]),a._v(" na declaração de uma classe:")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("abstract")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" salario"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBonificacao")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("salario "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// outros atributos e métodos comuns a todos Funcionarios")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("E, no meio de um código:")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),a._v(" f "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// não compila!!!")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("O código acima não compila. O problema é instanciar a classe - criar referência, você pode. Se ela não pode ser instanciada, para que serve? Serve para o polimorfismo e herança dos atributos e métodos, que são recursos muito poderosos, como já vimos.")]),a._v(" "),e("p",[a._v("Vamos então herdar dessa classe, reescrevendo o método "),e("code",[a._v("getBonificacao")])]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Gerente")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBonificacao")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("salario "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.4")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("figure",[e("img",{attrs:{src:"https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuU9AJ2ekAKfCBb58paaiBbPmAyrBpipFIopApEU2YBYd5gNcbQGgf5QKfEQbO5CHK9HQd9b2G95BPb5gINuHN0NKM2uk1o0Nw180",alt:"uml diagram"}}),a._v(" "),e("figcaption",[a._v("UML da classe abstrata Funcionario e das classes concretas Gerente, Presidente e Diretor.")])]),a._v(" "),e("p",[a._v("Mas qual é a real vantagem de uma classe abstrata? Poderíamos ter feito isto com uma herança comum. Por enquanto, a única diferença é que não podemos instanciar um objeto do tipo "),e("code",[a._v("Funcionario")]),a._v(", que já é de grande valia, dando mais consistência ao sistema.")]),a._v(" "),e("p",[a._v("Fique claro que a nossa decisão de transformar "),e("code",[a._v("Funcionario")]),a._v(" em uma classe abstrata dependeu do nosso domínio. Pode ser que, em um sistema com classes similares, faça sentido que uma classe análoga a "),e("code",[a._v("Funcionario")]),a._v(" seja concreta.")]),a._v(" "),e("h4",{attrs:{id:"metodos-abstratos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#metodos-abstratos"}},[a._v("#")]),a._v(" Métodos abstratos")]),a._v(" "),e("p",[a._v("Se o método "),e("code",[a._v("getBonificacao")]),a._v(" não fosse reescrito, ele seria herdado da classe mãe, fazendo com que devolvesse o salário mais 20%.")]),a._v(" "),e("p",[a._v("Levando em consideração que cada funcionário em nosso sistema tem uma regra totalmente diferente para\nser bonificado, faz algum sentido ter esse método na classe "),e("code",[a._v("Funcionario")]),a._v("? Será que existe uma bonificação\npadrão para todo tipo de "),e("code",[a._v("Funcionario")]),a._v("? Parece que não, cada classe filha terá um método diferente de bonificação pois, de acordo com nosso sistema, não existe uma regra geral: queremos que cada pessoa que escreve\na classe de um "),e("code",[a._v("Funcionario")]),a._v(" diferente (subclasses de "),e("code",[a._v("Funcionario")]),a._v(") reescreva o método "),e("code",[a._v("getBonificacao")]),a._v(" de\nacordo com as suas regras.")]),a._v(" "),e("p",[a._v("Poderíamos, então, jogar fora esse método da classe "),e("code",[a._v("Funcionario")]),a._v("? O problema é que, se ele não existisse,\nnão poderíamos chamar o método apenas com uma referência a um "),e("code",[a._v("Funcionario")]),a._v(", pois ninguém garante\nque essa referência aponta para um objeto que possui esse método. Será que então devemos retornar um\ncódigo, como um número negativo? Isso não resolve o problema: se esquecermos de reescrever esse método,\nteremos dados errados sendo utilizados como bônus.")]),a._v(" "),e("p",[a._v("Existe um recurso em Java que, em uma classe abstrata, podemos escrever que determinado método será\nsempre escrito pelas classes filhas. Isto é, um "),e("strong",[a._v("método abstrato")]),a._v(".")]),a._v(" "),e("p",[a._v("Ele indica que todas as classes filhas (concretas, isto é, que não forem abstratas) devem reescrever esse método\nou não compilarão. É como se você herdasse a responsabilidade de ter aquele método.")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("Como declarar um método abstrato")]),a._v(" "),e("p",[a._v("Às vezes, não fica claro como declarar um método abstrato.")]),a._v(" "),e("p",[a._v("Basta escrever a palavra chave "),e("em",[a._v("abstract")]),a._v(" na assinatura do mesmo e colocar um ponto e vírgula\nem vez de abre e fecha chaves!")])]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("abstract")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Funcionario")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("abstract")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBonificacao")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// outros atributos e métodos")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h3",{attrs:{id:"k19"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k19"}},[a._v("#")]),a._v(" K19")]),a._v(" "),e("p",[e("sup",{staticClass:"footnote-ref"},[e("a",{attrs:{href:"#fn2",id:"fnref2"}},[a._v("[2]")])])]),a._v(" "),e("p",[a._v("Classes abstratas\nClasses abstratas\nClasses abstratas\nSobrecarga de Métodos\nÉ a capacidade de definir métodos com o mesmo nome\nAssinatura seja diferente.\nA mudança na assinatura ocorre alterando a quantidade e/ou tipo de parâmetros que um método recebe\nSobrecarga de Métodos\nSobrecarga é a capacidade de um objeto responder à mesma mensagem, com comportamentos (métodos) distintos, a depender dos tipos dos parâmetros recebidos\naplicarInjecao()\naplicarInjecao(String)\nSobrecarga de Métodos")]),a._v(" "),e("p",[a._v('Interface\nO objetivo de uma interface em Orientação a Objetos é definir um conjunto de comportamentos (métodos) que devem obrigatoriamente ser implementados pelas classes que utilizam a interface.\nDiferente da herança uma classe Java pode implementar n interfaces.\nInterface\nPadronização\nDiversas empresa fabricam aparelhos elétricos.\nInterface\nPadronização no desenvolvimento\nContratos\nNum sistema orientado a objetos, os objetos interagem entre si através de chamadas de métodos (troca de mensagens).\nPodemos dizer que os objetos se "encaixam" através dos métodos públicos assim como um plugue se encaixa em uma tomada através dos pinos.\nInterface\nUm padrão é definido através de especificações ou contratos. Nas aplicações orientadas a objetos, podemos criar um "contrato" para definir um determinado conjunto de métodos que deve ser implementado pelas classes que "assinarem" este contrato.\nEm orientação a objetos, um contrato é chamado de interface.\nInterface\nAs interfaces são estritamente modelos de comportamento\nAs interfaces não podem ser instanciadas pois não produzem objetos\nA relação existente entre as classes que implementam uma interface é uma relação do tipo “implementa os métodos de”\nInterface\nSe uma classe é definida por apenas métodos abstratos é melhor defini-lá como uma interface\nNenhum método de interface pode ter um corpo, ou seja, não tem um algoritmo definido para executar o comportamento.\nSão as classes que implementam a Interface que fornecerão os métodos\nInterface\nNo sistema do banco, podemos definir uma interface (contrato) para padronizar as assinaturas dos métodos oferecidos pelos objetos que representam as contas do banco.\nInterface\nInterface\nInterface\nInterface\nCaso novos tipos de contas sejam criados (ContaSalario, ContaInvestimento...) todas devem segui o mesmo contrato.\nInterface\nInterface\nInterface\nInterface\nAssim como uma pessoa pode assinar vários contratos, na Orientação à Objetos, uma classe pode implementar varias interfaces\nNo java não é permitida herança múltipla, mas é possível implementar varias interfaces\nInterface\nSe uma classe implementa uma interface, podemos aplicar a ideia do polimorfismo assim como quando aplicamos herança.')]),a._v(" "),e("p",[a._v("Em Java, como não há herança múltipla, muitas vezes, interfaces são apresentadas como uma alternativa para obter um grau maior de polimorfismo.\nInterface\nDigamos que os gerentes e as empresas possam acessar o sistema do banco com um nome de usuário e uma senha.\nInterface\nInterface\nEmpresa não é um funcionário e o gerente não é cliente. Neste caso, a solução é utilizar interfaces para obter o polimorfismo desejado.\nInterface\nAgora, conseguimos definir oque o método autentica()")]),a._v(" "),e("hr",{staticClass:"footnotes-sep"}),a._v(" "),e("section",{staticClass:"footnotes"},[e("ol",{staticClass:"footnotes-list"},[e("li",{staticClass:"footnote-item",attrs:{id:"fn1"}},[e("p",[a._v("Caelum. Java e Orientação a Objetos - Curso fj-11. "),e("a",{staticClass:"footnote-backref",attrs:{href:"#fnref1"}},[a._v("↩︎")])])]),a._v(" "),e("li",{staticClass:"footnote-item",attrs:{id:"fn2"}},[e("p",[a._v("K19-Treinamentos. (2013). Orientação a Objetos em Java, 220. "),e("a",{staticClass:"footnote-backref",attrs:{href:"#fnref2"}},[a._v("↩︎")])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);