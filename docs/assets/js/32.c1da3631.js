(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{403:function(a,s,t){"use strict";t.r(s);var e=t(29),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("ul",[t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/thread-life-cycle-in-java"}},[a._v("Thread life cycle")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/way-of-creating-thread-in-java"}},[a._v("Way of creating thread")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/better-way-to-create-a-thread-in-java"}},[a._v("Which is a better way to create a\n            thread?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/methods-of-thread-class"}},[a._v("Methods of Thread class")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/thread-start-vs-run-method"}},[a._v("Difference between thread start and run\n            method")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/why-we-call-start-method-in-thread"}},[a._v("Why we call start method in thread?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/override-start-method-in-thread"}},[a._v("Can we override start method?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/override-run-method-in-thread"}},[a._v("Can we override run method?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/start-a-thread-twice"}},[a._v("Is it possible to start a thread twice?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/thread-scheduling-in-java"}},[a._v("Thread scheduling")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/thread-priority-in-java"}},[a._v("Thread priority")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/naming-a-thread-in-java"}},[a._v("Naming a thread")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/joining-a-thread-in-java"}},[a._v("What is join method?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/get-current-thread-in-java"}},[a._v("How to get current thread?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/daemon-thread-in-java"}},[a._v("Daemon thread")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/call-run-method-directly"}},[a._v("Can we call run method directly?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/yield-sleep-thread-methods"}},[a._v("What is the difference between sleep and yield\n            method?")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/deadlock-in-java"}},[a._v("Deadlock")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/starvation-in-java"}},[a._v("Starvation")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/inter-thread-communication-in-java"}},[a._v("Inter-thread communication")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/synchronization-in-java"}},[a._v("Synchronization")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/synchronized-method-in-java"}},[a._v("Synchronized method")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/static-synchronization-in-java"}},[a._v("Static synchronization")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.w3schools.blog/synchronized-block-in-java"}},[a._v("Synchronized block")])])]),a._v(" "),t("h1",{attrs:{id:"threads"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#threads"}},[a._v("#")]),a._v(" Threads")]),a._v(" "),t("ul",[t("li",[a._v("Threads são linhas de execuções que realizam tarefas simultâneas (caso tenhamos mais de 1 processador) ou de forma a compartilhar o processamento.")]),a._v(" "),t("li",[a._v("Cada thread é como um programa individual que tem total poder sobre a CPU.")]),a._v(" "),t("li",[a._v("Java suporta explicitamente como parte da linguagem.")]),a._v(" "),t("li",[a._v("Com o uso de Threads é possível dividir o programa em dois ou mais processos que podem rodar de forma paralela.")]),a._v(" "),t("li",[a._v("Multithreading implica em duas ou mais tarefas rodando de forma concorrente (aparentemente em paralelo) dentro de um mesmo programa.")]),a._v(" "),t("li",[a._v("Alguns programas necessitam fazer várias tarefas que requerem recursos computacionais diversos. Se estas tarefas podem ser feitas independentemente, então é possível usar threads para que o programa não fique limitado a performance dos recursos lentos (I/O).")])]),a._v(" "),t("figure",[t("img",{attrs:{src:"https://www.plantuml.com/plantuml/svg/VP7B2iCW44NNpLVCBhj0VAtp4TqL5mDcKJ19oLXA_xvZPCGIo4RqUkuHTQA4UteliNlSHmyHAH5O2FWbJfGakacE1W4co9MUO5u3x-XJM_-pIjWkdpNmQKWS6-avwN4IdlIAl89j1S9bXdtx57pqXMZDkffvNiLMn4R4zagiVI5QiQdYMxvxLRlJkxWhjVA5QDMsgYSU-GD-",alt:"uml diagram"}}),a._v(" "),t("figcaption",[a._v("Exemplo de uso de tempo do processador pelas Threads.")])]),a._v(" "),t("br"),a._v(" "),t("figure",[t("img",{attrs:{src:"https://www.plantuml.com/plantuml/svg/RL4x3i8m3Drp2aiiC5Ji7L1N9iwGDguKgR53wgXmUnBw2LNPyZxsUrQQKNIGw0QL7e90UkoiGn9U21-OH2y0NzX5qMHMjHtu6L6RpJ1w33-wuU1iWOw3Q3YrWITIgcH1LTsM9AZXM-byKGkHjH9SGuYKnCBCXZKupK_Qoj6nLia10w8_EkPsDVJM9VV_dEtWvBjV7whWtGbvHPPBhPrCBBP_f-rRgSEqeFCCIZL89dtF1m00",alt:"uml diagram"}}),a._v(" "),t("figcaption",[a._v("Diagrama de estado de uma Thread.")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Existem duas formas para criar um thread:")]),a._v(" "),t("ul",[t("li",[a._v("Estendendo a classe Thread")]),a._v(" "),t("li",[a._v("Implementando a interface Runnable.")])])]),a._v(" "),t("li",[t("p",[a._v("Nos dois casos é necessário sobrescrever o método "),t("code",[a._v("run()")]),a._v(' que é o " main()" do thread.')])]),a._v(" "),t("li",[t("p",[a._v("O método run deve conter a execução que irá rodar pelo tempo de vida do thread. Quando o método terminar, o thread morre.")])]),a._v(" "),t("li",[t("p",[a._v("Para iniciar o thread é necessário chamar o método "),t("code",[a._v("start()")]),a._v(" .")])]),a._v(" "),t("li",[t("p",[a._v("É a maquina virtual quem controla a execução e o ciclo de vida do thread.")])])]),a._v(" "),t("h2",{attrs:{id:"herdando-a-classe-thread"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#herdando-a-classe-thread"}},[a._v("#")]),a._v(" Herdando a classe Thread")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadA")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"A: "')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("h2",{attrs:{id:"implementando-a-interface-runnable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#implementando-a-interface-runnable"}},[a._v("#")]),a._v(" Implementando a interface Runnable")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadB")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"B: "')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TesteThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadA")]),a._v(" ta "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadA")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" tb "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadB")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        ta"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        tb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])]),t("ul",[t("li",[a._v("Estendendo a classe Thread significa que a subclasse não pode estender qualquer outra classe, enquanto que a classe que implementa a interface Runnable tem essa opção.")])]),a._v(" "),t("h2",{attrs:{id:"synchronized"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#synchronized"}},[a._v("#")]),a._v(" Synchronized")]),a._v(" "),t("ul",[t("li",[a._v("Permite que blocos sensíveis ao acesso simultâneo sejam protegidos de corrupção")]),a._v(" "),t("li",[a._v("Impede que objetos os utilizem ao mesmo tempo.\n"),t("ul",[t("li",[a._v("Se um recurso crítico está sendo usado, só um thread tem acesso.")]),a._v(" "),t("li",[a._v("É preciso que os outros esperem até que o recurso esteja livre.")])])]),a._v(" "),t("li",[a._v("Métodos sincronizados são métodos que são usados para controlar o acesso a um objeto.")]),a._v(" "),t("li",[a._v("Uma thread apenas executa um método sincronizado depois que adquiriu o bloqueio para o objeto do método ou classe.")]),a._v(" "),t("li",[a._v("Se o bloqueio já está em poder de outra thread, a thread chamada aguarda.")]),a._v(" "),t("li",[a._v("Uma thread abandona o bloqueio simplesmente ao finalizar do método sincronizado, permitindo que a próxima thread esperando por este bloqueio possa prosseguir.")]),a._v(" "),t("li",[a._v("Métodos sincronizados são úteis em situações em que os métodos podem manipular o estado de um objeto de formas que podem corromper o estado, se executados simultaneamente.")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//...")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("metodo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("synchronized")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// conteudo do metodo")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//...")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("synchronized")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("metodo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// conteudo do metodo")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//...")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br")])]),t("h2",{attrs:{id:"estados-de-uma-thread"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#estados-de-uma-thread"}},[a._v("#")]),a._v(" Estados de uma Thread")]),a._v(" "),t("ul",[t("li",[a._v("Nova Thread\n"),t("ul",[t("li",[a._v("Quando uma Thread é criada mas não foi chamado o start()")])])]),a._v(" "),t("li",[a._v("Rodando\n"),t("ul",[t("li",[a._v("Quando o método start() é chamado em uma nova thread ela altera o seu estado para em execução é chamando o método run()")])])]),a._v(" "),t("li",[a._v("Não Execução\n"),t("ul",[t("li",[a._v("Uma thread interrompe sua execução quando um quatro seguintes eventos ocorrem:\n"),t("ul",[t("li",[a._v("Quando o método sleep() é chamado e ele dorme por um período de tempo especificado")]),a._v(" "),t("li",[a._v("Quando o método suspend() é invocado")]),a._v(" "),t("li",[a._v("Quando o método wait() é chamado e a thread espera para a notificação de um recurso livre ou aguarda a conclusão de outra thread ou espera para adquirir um bloqueio de um objeto.")]),a._v(" "),t("li",[a._v("A thread está bloqueado em I / O e aguarda a sua conclusão")])])])])])]),a._v(" "),t("h2",{attrs:{id:"acessando-informacoes-da-threads"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#acessando-informacoes-da-threads"}},[a._v("#")]),a._v(" Acessando informações da Threads")]),a._v(" "),t("p",[a._v("Thread.currentThread() pode retornar uma saída como Thread [threadA, 5, main]")]),a._v(" "),t("ul",[t("li",[a._v("Sendo\n"),t("ul",[t("li",[a._v("nome da Thread")]),a._v(" "),t("li",[a._v("prioridade da thread")]),a._v(" "),t("li",[a._v("nome do grupo a que pertence")])])])]),a._v(" "),t("h2",{attrs:{id:"prioridade-de-execucao"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prioridade-de-execucao"}},[a._v("#")]),a._v(" Prioridade de Execução")]),a._v(" "),t("ul",[t("li",[a._v("Nas threads a prioridade pode ser setada a qualquer momento\n"),t("ul",[t("li",[a._v("setPriority()")]),a._v(" "),t("li",[a._v("getPriority()")])])]),a._v(" "),t("li",[a._v("Thread\n"),t("ul",[t("li",[a._v("MIN_PRIORITY (0)")]),a._v(" "),t("li",[a._v("NORM_PRIORITY (5)")]),a._v(" "),t("li",[a._v("MAX_PRIORITY (10)")])])])]),a._v(" "),t("h2",{attrs:{id:"gerenciando-as-threads"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gerenciando-as-threads"}},[a._v("#")]),a._v(" Gerenciando as Threads")]),a._v(" "),t("ul",[t("li",[a._v("Dormir e acordar\n"),t("ul",[t("li",[a._v("A classe thread contém um método estático chamado sleep() que faz a thread em execução no momento pause sua execução e mude para o estado de sono. A thread vai dormir por pelo menos o tempo especificado em seu parâmetro, antes de entrar no estado executável.")])])]),a._v(" "),t("li",[a._v("Waiting and Notifying\n"),t("ul",[t("li",[a._v("Esperando e notificando fornecer os meios de comunicação entre as thread que sincroniza sobre o mesmo objeto.")]),a._v(" "),t("li",[a._v("As threads executam os métodos wait() e notify() (ou notifyAll()) no objeto compartilhado para esta finalidade.")]),a._v(" "),t("li",[a._v("O notifyAll (), notify() e wait() são métodos da classe Object. Estes métodos podem ser chamados apenas a partir de dentro de um contexto sincronizado (método sincronizado ou bloco sincronizado), caso contrário, a chamada irá resultar em um IllegalMonitorStateException.")]),a._v(" "),t("li",[a._v("O notifyAll() método acorda todas as threads em espera no recurso. Nesta situação, as threads despertadas competem para o recurso. Uma threads recebe o recurso e os outros vão voltar a esperar.")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);