(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{382:function(a,s,t){"use strict";t.r(s);var e=t(29),o=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"paradigmas-das-linguagens-de-programacao"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paradigmas-das-linguagens-de-programacao"}},[a._v("#")]),a._v(" Paradigmas das linguagens de programação")]),a._v(" "),t("p",[a._v("Quando uma linguagem de programação é criada, a partir das suas características, ela é categorizada em um ou mais paradigmas.")]),a._v(" "),t("p",[a._v('A definição do dicionário Aurélio para "paradigma":')]),a._v(" "),t("ul",[t("li",[a._v("Algo que serve de exemplo geral ou de modelo.")]),a._v(" "),t("li",[a._v("Conjunto das formas que servem de modelo de derivação ou de flexão.")]),a._v(" "),t("li",[a._v("Conjunto dos termos ou elementos que podem ocorrer na mesma posição ou contexto de uma estrutura.")])]),a._v(" "),t("p",[a._v("O paradigma de uma linguagem de programação é a sua identidade. Corresponde a um conjunto de características que, juntas, definem como ela opera e resolve os problemas. Algumas linguagens, inclusive, possuem mais de um paradigma, são as chamadas multi paradigmas.")]),a._v(" "),t("p",[a._v("Alguns dos principais paradigmas utilizados hoje no mercado:")]),a._v(" "),t("ul",[t("li",[a._v("Funcional")]),a._v(" "),t("li",[a._v("Lógico")]),a._v(" "),t("li",[a._v("Declarativo")]),a._v(" "),t("li",[a._v("Imperativo")]),a._v(" "),t("li",[a._v("Orientado a objetos")]),a._v(" "),t("li",[a._v("Orientado a eventos")])]),a._v(" "),t("h2",{attrs:{id:"paradigma-funcional"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paradigma-funcional"}},[a._v("#")]),a._v(" Paradigma funcional")]),a._v(" "),t("p",[a._v("O foco desse paradigma está na avaliação de funções. Como na matemática quando temos, por exemplo, uma função "),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",[t("semantics",[t("mrow",[t("mi",[a._v("f")]),t("mo",[a._v("(")]),t("mi",[a._v("x")]),t("mo",[a._v(")")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("f(x)")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),t("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"base textstyle uncramped"},[t("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10764em"}},[a._v("f")]),t("span",{staticClass:"mopen"},[a._v("(")]),t("span",{staticClass:"mord mathit"},[a._v("x")]),t("span",{staticClass:"mclose"},[a._v(")")])])])]),a._v(":")]),a._v(" "),t("p",[t("span",{staticClass:"katex-display"},[t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",[t("semantics",[t("mrow",[t("mi",[a._v("f")]),t("mo",[a._v("(")]),t("mi",[a._v("x")]),t("mo",[a._v(")")]),t("mo",[a._v("=")]),t("mi",[a._v("x")]),t("mo",[a._v("+")]),t("mn",[a._v("2")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("f(x) = x + 2\n")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),t("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"base displaystyle textstyle uncramped"},[t("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10764em"}},[a._v("f")]),t("span",{staticClass:"mopen"},[a._v("(")]),t("span",{staticClass:"mord mathit"},[a._v("x")]),t("span",{staticClass:"mclose"},[a._v(")")]),t("span",{staticClass:"mrel"},[a._v("=")]),t("span",{staticClass:"mord mathit"},[a._v("x")]),t("span",{staticClass:"mbin"},[a._v("+")]),t("span",{staticClass:"mord mathrm"},[a._v("2")])])])])])]),a._v(" "),t("p",[t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",[t("semantics",[t("mrow",[t("mi",[a._v("x")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("x")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),t("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),t("span",{staticClass:"base textstyle uncramped"},[t("span",{staticClass:"mord mathit"},[a._v("x")])])])]),a._v(" é um parâmetro (o valor de entrada) e, após a expressão ser avaliada, obtêm-se o resultado.")]),a._v(" "),t("p",[a._v("Se o valor de entrada for 2, o resultado da avaliação da nossa função será 4.")]),a._v(" "),t("p",[a._v("Algumas das linguagens que atendem a esse paradigma: F# (da Microsoft), Lisp, Heskell, Erlang, Elixir, Mathematica.")]),a._v(" "),t("p",[a._v('É possível desenvolver de forma "funcional" mesmo em linguagens não estritamente funcionais. Por exemplo, no PHP, que é uma linguagem multi paradigma, teríamos:')]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token php language-php"}},[t("span",{pre:!0,attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$sum")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4")]),a._v("\n\n")])])])]),t("h2",{attrs:{id:"paradigma-logico"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paradigma-logico"}},[a._v("#")]),a._v(" Paradigma lógico")]),a._v(" "),t("p",[a._v('Também é conhecido como "restritivo". Muito utilizado em aplicações de inteligência artificial. Esse paradigma chega no resultado esperado a partir de avaliações lógico-matemáticas. Se você já estudou lógica de predicados ficará confortável em entender como uma linguagem nesse paradigma opera.')]),a._v(" "),t("p",[a._v("Principais elementos desse paradigma:")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("Proposições:")]),a._v(" base de fatos concretos e conhecidos.")]),a._v(" "),t("li",[t("strong",[a._v("Regras de inferência:")]),a._v(" definem como deduzir proposições.")]),a._v(" "),t("li",[t("strong",[a._v("Busca:")]),a._v(" estratégias para controle das inferências.")])]),a._v(" "),t("p",[a._v("Exemplo:")]),a._v(" "),t("dl",[t("dt",[t("strong",[a._v("Proposição")])]),a._v(" "),t("dd",[a._v("Chico é um gato.")]),a._v(" "),t("dt",[t("strong",[a._v("Regra de inferência")])]),a._v(" "),t("dd",[a._v("Todo gato é um felino.")]),a._v(" "),t("dt",[t("strong",[a._v("Busca")])]),a._v(" "),t("dd",[a._v("Chico é um felino?")])]),a._v(" "),t("p",[a._v("A resposta para a "),t("strong",[a._v("Busca")]),a._v(" acima precisa ser "),t("strong",[a._v("verdadeira")]),a._v(". A conclusão lógica é:")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("Se Chico é um gato e todo gato é felino, então Chico é um felino.")])]),a._v(" "),t("p",[a._v("A ideia básica da programação em lógica é:")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("Prof. Dr. Sílvio do Lago Pereira – DTI / FATEC-SP.")]),a._v(" "),t("p",[a._v("Oferecer um arcabouço que permita inferir conclusões desejadas, a partir de premissas, representando o conhecimento disponível, de uma forma que seja computacionalmente viável.")])]),a._v(" "),t("p",[a._v("A linguagem mais conhecida que utiliza esse paradigma é a "),t("strong",[a._v("Prolog.")]),a._v(" Esse paradigma é pouco utilizado em aplicações comerciais, seu uso se dá mais na área acadêmica.")]),a._v(" "),t("h2",{attrs:{id:"paradigma-declarativo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paradigma-declarativo"}},[a._v("#")]),a._v(" Paradigma declarativo")]),a._v(" "),t("p",[a._v("O paradigma declarativo é baseado no lógico e funcional. Linguagens declarativas descrevem o que fazem e não exatamente como suas instruções funcionam.")]),a._v(" "),t("p",[a._v("Linguagens de marcação são o melhor exemplo: HTML, XML, XSLT, XAML etc. Não obstante, o próprio Prolog – reconhecido primariamente pelo paradigma lógico – também é uma linguagem declarativa. Abaixo alguns exemplos dessas linguagens.")]),a._v(" "),t("p",[a._v("HTML:")]),a._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("article")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("header")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("h1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("Linguagens e paradigmas de programação"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("h1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("header")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("article")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[a._v("SQL:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" nome "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" usuario "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n")])])]),t("h2",{attrs:{id:"paradigma-imperativo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paradigma-imperativo"}},[a._v("#")]),a._v(" Paradigma imperativo")]),a._v(" "),t("p",[a._v('Você já ouviu falar em "programação procedural" ou em "programação modular"? De modo geral, são imperativas.')]),a._v(" "),t("p",[a._v('Linguagens clássicas como C, C++, PHP, Perl, C#, Ruby etc, "suportam" esse paradigma. Ele é focado na mudança de estados de variáveis (ao contrário dos anteriores).')]),a._v(" "),t("p",[a._v("Exemplo:")]),a._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("option "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'A'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"Opção 'A' selecionada.\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("A impressão só será realizada se o valor da variável "),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",[t("semantics",[t("mrow",[t("mi",[a._v("o")]),t("mi",[a._v("p")]),t("mi",[a._v("t")]),t("mi",[a._v("i")]),t("mi",[a._v("o")]),t("mi",[a._v("n")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("option")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"strut",staticStyle:{height:"0.65952em"}}),t("span",{staticClass:"strut bottom",staticStyle:{height:"0.85396em","vertical-align":"-0.19444em"}}),t("span",{staticClass:"base textstyle uncramped"},[t("span",{staticClass:"mord mathit"},[a._v("o")]),t("span",{staticClass:"mord mathit"},[a._v("p")]),t("span",{staticClass:"mord mathit"},[a._v("t")]),t("span",{staticClass:"mord mathit"},[a._v("i")]),t("span",{staticClass:"mord mathit"},[a._v("o")]),t("span",{staticClass:"mord mathit"},[a._v("n")])])])]),a._v(" for igual a "),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",[t("semantics",[t("mrow",[t("mi",[a._v("A")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("A")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),t("span",{staticClass:"strut bottom",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),t("span",{staticClass:"base textstyle uncramped"},[t("span",{staticClass:"mord mathit"},[a._v("A")])])])]),a._v(".")]),a._v(" "),t("h2",{attrs:{id:"paradigma-orientado-a-objetos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paradigma-orientado-a-objetos"}},[a._v("#")]),a._v(" Paradigma orientado a objetos")]),a._v(" "),t("p",[a._v('Esse é, entre todos, talvez o mais difundido. Nesse paradigma, ao invés de construirmos nossos sistemas com um conjunto estrito de procedimentos, assim como se faz em linguagens "fortemente" imperativas como o Cobol, Pascal etc, na orientação a objetos utilizamos uma lógica bem próxima do mundo real, lidando com objetos, estruturas que já conhecemos e sobre as quais possuímos uma grande compreensão.')]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("Dica")]),a._v(" "),t("p",[a._v("OO é sigla para orientação a objetos")])]),a._v(" "),t("p",[a._v("O paradigma orientado a objetos tem uma grande preocupação em esconder o que não é importante e em realçar o que é importante. Nele, implementa-se um conjunto de classes que definem objetos. Cada classe determina o comportamento (definido nos métodos) e estados possíveis (atributos) de seus objetos, assim como o relacionamento entre eles.")]),a._v(" "),t("p",[a._v("Esse é o paradigma mais utilizado em aplicações comerciais e as principais linguagens o implementam: C#, Java, PHP, Ruby, C++, Python etc.")]),a._v(" "),t("h2",{attrs:{id:"paradigma-orientado-a-eventos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paradigma-orientado-a-eventos"}},[a._v("#")]),a._v(" Paradigma orientado a eventos")]),a._v(" "),t("p",[a._v("Toda linguagem que faz uso de interface gráfica é baseada nesse paradigma. Nele, o fluxo de execução do software é baseado na ocorrência de eventos externos, normalmente disparados pelo usuário.")]),a._v(" "),t("p",[a._v('O usuário, ao interagir, decidirá em qual momento digitar, clicar no botão de "salvar" etc. Essas decisões dispararão eventos. O usuário é, então, o responsável por quando os eventos acontecerão, de tal forma que fluxo do programa fica sensivelmente atrelado à ocorrências desses eventos.')]),a._v(" "),t("p",[a._v("Linguagens de programação que fazem uso desse paradigma:")]),a._v(" "),t("ul",[t("li",[a._v("Delphi")]),a._v(" "),t("li",[a._v("Visual Basic")]),a._v(" "),t("li",[a._v("C#")]),a._v(" "),t("li",[a._v("Python")]),a._v(" "),t("li",[a._v("Java etc.")])])])}),[],!1,null,null,null);s.default=o.exports}}]);