(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{405:function(a,e,o){"use strict";o.r(e);var t=o(29),s=Object(t.a)({},(function(){var a=this,e=a.$createElement,o=a._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("h1",{attrs:{id:"exercicio-de-modelagem-3-heranca"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#exercicio-de-modelagem-3-heranca"}},[a._v("#")]),a._v(" Exercício de Modelagem 3 Herança")]),a._v(" "),o("p",[o("sup",{staticClass:"footnote-ref"},[o("a",{attrs:{href:"#fn1",id:"fnref1"}},[a._v("[1]")])])]),a._v(" "),o("ol",[o("li",[a._v("De forma incremental, traduza o seguinte conjunto de classes em um programa Java. Importante: Não são permitidas chamadas a System.in, System.out ou similares de dentro das classes criadas.\n"),o("ol",[o("li",[o("p",[a._v("Classe: Porta")]),a._v(" "),o("p",[a._v("Atributos: aberta, cor, dimensaoX, dimensaoY, dimensaoZ")]),a._v(" "),o("p",[a._v("Métodos: void abre(), void fecha(), void pinta(String s), boolean estaAberta()")]),a._v(" "),o("p",[a._v("Para testar, crie uma porta, abra e feche a mesma, pinte‐a de diversas cores, altere suas dimensões e use o método estaAberta para verificar se ela está aberta.")])]),a._v(" "),o("li",[o("p",[a._v("Classe: Casa")]),a._v(" "),o("p",[a._v("Atributos: cor, porta1, porta2, porta3")]),a._v(" "),o("p",[a._v("Método:  void  pinta(String  s),  int  quantasPortasEstaoAbertas(), int totalDePortas()")]),a._v(" "),o("p",[a._v("Para testar, crie uma casa e pinte‐a. Crie três portas e coloque‐as na casa; abra e feche as mesmas como desejar. Utilize o método quantasPortasEstaoAbertas para imprimir o número de portas abertas.")])]),a._v(" "),o("li",[o("p",[a._v("Classe: Edificio")]),a._v(" "),o("p",[a._v("Atributos: cor, totalDePortas, totalDeAndares, portas[]")]),a._v(" "),o("p",[a._v("Métodos:  void  pinta(String  s),  int  quantasPortasEstaoAbertas(), void adicionaPorta(Porta  p),  int  totalDePortas(),  void  adicionarAndar(),  int totalDeAndares()")]),a._v(" "),o("p",[a._v("Para testar, crie um edifício, pinte‐o. Crie seis portas e coloque‐as no edifício através do método adicionaPorta, abra e feche‐as como desejar. Utilize o método quantasPortasEstaoAbertas  para  imprimir  o  número  de  portas  abertas  e  o método totalDePortas para imprimir o total de portas em seu edifício. Cria alguns andares utilizado o método adicionarAndar e retorne o número total de andares utilizando o método totalDeAndares.")])]),a._v(" "),o("li",[o("p",[a._v("As classes Casa e edifício ficaram muito parecidas. Crie a classe Imovel e coloque nela tudo o Casa e Edificio tem em comum. Faça Imovel superclasse de Casa e Edificio. Note que alguns métodos em comum não poderão ser implementados por Imovel (e.g., quantasPortasEstaoAbertas e totalDePortas). Logo, esses deverão ser declarados como métodos")])])])])]),a._v(" "),o("hr",{staticClass:"footnotes-sep"}),a._v(" "),o("section",{staticClass:"footnotes"},[o("ol",{staticClass:"footnotes-list"},[o("li",{staticClass:"footnote-item",attrs:{id:"fn1"}},[o("p",[a._v("Leandro A. F. Fernandes, Marcos Lage, Isabel Rosseti. 2ª Lista de Exercícios Orientação a Objetos. Universidade Federal Fluminense, Instituto de Computação, Departamento de Ciência da Computação, Programação de Computadores II "),o("a",{staticClass:"footnote-backref",attrs:{href:"#fnref1"}},[a._v("↩︎")])])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);